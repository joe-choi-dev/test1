# .github/workflows/git-sync.yml



on:
  push:
    branches:
      - main

jobs:
  git-sync:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: git-logs
        run: |
          # check logs
          git --version
          git status
          git remote -v
          git remote add dest git@github.com:joe-choi-dev/test2.git
          git remote -v

          echo "store ssh key"
          mkdir -p ssh
          ls
          ls ssh
          echo "$DESTINATION_SSH_PRIVATE_KEY" > ssh/dst_rsa
          chmod 600 ssh/dst_rsa
          stat ssh/dst_rsa
          
          echo "setup ssh in git"
          git config --local core.sshCommand "/usr/bin/ssh -i ssh/dst_rsa"
          git --no-pager branch -a -vv

          echo "push"
          git push dest main:temp -f
        env:
          DESTINATION_SSH_PRIVATE_KEY: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }}

#           echo "$DESTINATION_SSH_PRIVATE_KEY" | sed 's/\\n/\n/g' > /ssh/dst_rsa
# on:
#   push:
#     branches: [ main ]
# jobs:
#   asdf:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout
#         uses: actions/checkout@v2
#       - name: sync
#         run: |
#           git remote add mck-priv git@github.com:joe-choi-dev/test2.git
#           git push --set-upstream mck-priv main
#         env:
#           token: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }}
#           fetch-depth: 0
        
# env:
#   SRC_KEY: ${{secrets.SOURCE_SSH_PRIVATE_KEY}}
#   DEST_KEY: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }}

# on: push


# jobs:
#   git-sync:
#     runs-on: ubuntu-latest
#     steps:
      # - name: checkout
      #   uses: actions/checkout@v3
      #   with:
      #     repository: wei/git-sync
      # - name: git
      #   run: |
      #     # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      #     git --version
      #     git status
      #     git remote -v 
      # - name: git-sync
      #   uses: ./
      #   with:
      #     source_repo: "git@github.com:joe-choi-dev/test1.git"
      #     source_branch: "main"
      #     destination_repo: "git@github.com:joe-choi-dev/test2.git"
      #     destination_branch: "main"
      #     source_ssh_private_key: ${{ secrets.SOURCE_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
      #     destination_ssh_private_key: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
      # - name: docker
      #   if: env.SRC_KEY && env.DEST_KEY
      #   run: |
      #     cd "${{ github.workspace }}/git-sync"
      #     docker run --rm -e "source_ssh_private_key=$SRC_KEY" -e "destination_ssh_private_key=$DEST_KEY" $(docker build -q .) \
      #     git@github.com:joe-choi-dev/test1.git main git@github.com:joe-choi-dev/test2.git main
      # - name: git-sync
      #   uses: wei/git-sync@v3
      #   uses: "home/runner/work/test1/test1/git-sync"
      #   with:
      #     source_repo: "git@github.com:joe-choi-dev/test1.git"
      #     source_branch: "main"
      #     destination_repo: "git@github.com:joe-choi-dev/test2.git"
      #     destination_branch: "main"
      #     source_ssh_private_key: ${{ secrets.SOURCE_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`
      #     destination_ssh_private_key: ${{ secrets.DESTINATION_SSH_PRIVATE_KEY }} # optional, will override `SSH_PRIVATE_KEY`